process ProdTPGParam  = {

# Calo geometry service model
   include "Geometry/CaloEventSetup/data/CaloGeometry.cfi"
   include "Geometry/CaloEventSetup/data/EcalTrigTowerConstituents.cfi"
   include "Geometry/CMSCommonData/data/cmsIdealGeometryXML.cfi"

# ecal mapping
   include "Geometry/EcalMapping/data/EcalMapping.cfi"
   es_source eegeom = EmptyESSource {
     string recordName = "EcalMappingRcd"
     vuint32 firstValid = { 1 }
     bool iovIsRunNotTime = true
   }

# Get hardcoded conditions the same used for standard digitization
#   include "CalibCalorimetry/EcalTrivialCondModules/data/EcalTrivialCondRetriever.cfi"

   include "CondCore/DBCommon/data/CondDBCommon.cfi"
# to write in sqlite
#   replace CondDBCommon.connect = "sqlite_file:DB.db"
#   replace CondDBCommon.timetype = "runnumber"


# to read from orcon
    replace CondDBCommon.connect = "oracle://cms_orcoff_prod/CMS_COND_20X_ECAL"
    replace CondDBCommon.DBParameters.authenticationPath="/afs/cern.ch/cms/DB/conddb/"

    es_source = PoolDBESSource
    {
        using CondDBCommon
        untracked string timetype="runnumber"
        VPSet toGet=
        {
            {
                string record = "EcalPedestalsRcd"
                string tag ="EcalPedestals_online"
            },
            {
               string record = "EcalChannelStatusRcd"
               string tag = "EcalChannelStatus_mc"
            },
            {
               string record = "EcalIntercalibConstantsRcd"
               string tag = "EcalIntercalibConstants_CosmGain200"
            },
            {
               string record = "EcalGainRatiosRcd"
               string tag = "EcalGainRatios_mc"
            },
            {
               string record = "EcalWeightXtalGroupsRcd"
               string tag = "EcalWeightXtalGroups_mc"
            },
           {
               string record = "EcalTBWeightsRcd"
               string tag = "EcalTBWeights_mc"
            },
            {
               string record = "EcalADCToGeVConstantRcd"
               string tag = "EcalADCToGeVConstant_CosmGain200"
            }
        }
    }




#########################
 source = EmptySource {}
 untracked PSet maxEvents = {untracked int32 input = 1}

 module TPGParamProducer = EcalTPGParamBuilder {

  #### inputs/ouputs control ####
  bool readFromDB = true
  bool writeToDB  = true
  bool allowDBEE  = false
  uint32 DBSteering = 00000100 # digit1=pedestal, 2=linearization coeff, 3=weight, 4=LUT

  string DBsid   = "omds"
  string DBuser  = "here_goes_the_account"
  string DBpass  = "here_goes_the_password"
  uint32 DBport  = 1521
  uint32 DBrunNb = 43500

  bool writeToFiles = true
  string outFile = "TPG.txt"


  #### TPG calculation parameters ####
  bool   useTransverseEnergy = true  # true when TPG computes transverse energy, false for energy
  double Et_sat_EB = 120.            # Saturation value (in GeV) of the TPG before the compressed-LUT (rem: with 35.84 the TPG_LSB = crystal_LSB)
  double Et_sat_EE = 120.            # Saturation value (in GeV) of the TPG before the compressed-LUT (rem: with 35.84 the TPG_LSB = crystal_LSB)

  uint32 sliding = 2                 # Parameter used for the FE data format, should'nt be changed

  uint32 weight_sampleMax = 3        # position of the maximum among the 5 samples used by the TPG amplitude filter 

  string LUT_option = "Linear"       # compressed LUT option can be: "Identity", "Linear", "EcalResolution"
  double LUT_threshold_EB = 0.       # All Trigger Primitives <= threshold (in GeV) will be set to 0 
  double LUT_threshold_EE = 0.       # All Trigger Primitives <= threshold (in GeV) will be set to 0 
  double LUT_stochastic_EB = 0.03    # Stochastic term of the ECAL-EB ET resolution (used only if LUT_option="EcalResolution")
  double LUT_noise_EB = 0.200        # noise term (GeV) of the ECAL-EB ET resolution (used only if LUT_option="EcalResolution")
  double LUT_constant_EB = 0.005     # constant term of the ECAL-EB ET resolution (used only if LUT_option="EcalResolution")
  double LUT_stochastic_EE = 0.03    # Stochastic term of the ECAL-EE ET resolution (used only if LUT_option="EcalResolution")
  double LUT_noise_EE = 0.200        # noise term (GeV) of the ECAL-EE ET resolution (used only if LUT_option="EcalResolution")
  double LUT_constant_EE = 0.005     # constant term of the ECAL-EE ET resolution (used only if LUT_option="EcalResolution")

  double TTF_lowThreshold_EB = 1.    # EB Trigger Tower Flag low threshold in GeV
  double TTF_highThreshold_EB = 1.   # EB Trigger Tower Flag high threshold in GeV
  double TTF_lowThreshold_EE = 1.    # EE Trigger Tower Flag low threshold in GeV
  double TTF_highThreshold_EE = 1.   # EE Trigger Tower Flag high threshold in GeV

  double FG_lowThreshold_EB = 5.     # EB Fine Grain Et low threshold in GeV
  double FG_highThreshold_EB = 5.    # EB Fine Grain Et high threshold in GeV
  double FG_lowRatio_EB = 0.80       # EB Fine Grain low-ratio
  double FG_highRatio_EB = 0.80      # EB Fine Grain high-ratio
  uint32 FG_lut_EB = 0               # EB Fine Grain Look-up table. Put something != 0 if you really know what you do!
  double FG_Threshold_EE = 0.        # EE Fine threshold in GeV
  uint32 FG_lut_strip_EE = 0         # EE Fine Grain strip Look-up table
  uint32 FG_lut_tower_EE = 0         # EE Fine Grain tower Look-up table
 }
 
 path p = { TPGParamProducer }

}

